<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2015 MobileMan GmbH
  www.mobileman.com
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
    http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
  http://www.springframework.org/schema/integration
  http://www.springframework.org/schema/integration/spring-integration.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
  http://www.springframework.org/schema/task
  http://www.springframework.org/schema/task/spring-task-3.0.xsd
  http://www.springframework.org/schema/cache
  http://www.springframework.org/schema/cache/spring-cache.xsd">
  	
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/properties/mongo.properties</value>
				<value>classpath:/properties/social.properties</value>
				<value>classpath:/properties/mail.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
		<property name="defaultLocale" value="de" />
	</bean>

	<import resource="../datastore/mongo-config.xml" />
	
	<int:annotation-config/>
	<tx:annotation-driven />
	<task:annotation-driven />
	<cache:annotation-driven/>
	
	<!-- Security Configuration / Apache Shiro -->
	<import resource="shiro-context.xml" />
	<import resource="social-context.xml" />

	<!-- Scans the impl package for module @Components to install and configure <aop:aspectj-autoproxy proxy-target-class="true"/>-->
		
	<context:component-scan base-package="com.mobileman.kuravis.core" use-default-filters="true">
		<context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration" />
	</context:component-scan>

	<!-- Simple strategy: only path extension is taken into account -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true" />
		<property name="ignoreAcceptHeader" value="false" />
		<property name="defaultContentType" value="application/json" />
		<property name="useJaf" value="false" />

		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="png" value="image/png" />
			</map>

		</property>
	</bean>

	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper"
		factory-bean="objectMapperFactory">
	</bean>
	<bean id="objectMapperFactory"
		class="org.springframework.http.converter.json.JacksonObjectMapperFactoryBean">
		<property name="featuresToDisable">
			<array>
				<util:constant
					static-field="org.codehaus.jackson.map.SerializationConfig$Feature.WRITE_NULL_PROPERTIES" />
			</array>
		</property>
	</bean>

	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager">
		<mvc:argument-resolvers>
			<bean class="org.springframework.data.web.PageableArgumentResolver" />
		</mvc:argument-resolvers>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="objectMapper" ref="objectMapper">
				</property>
			</bean>

			<bean
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>image/jpeg</value>
						<value>image/png</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- Resolves messages to support internationalization -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:i18n/messages" />
	</bean>
	
	<bean id="configurationService" class="com.mobileman.kuravis.core.services.configuration.impl.ConfigurationServiceImpl">
		<property name="minPasswordLength" value="4"/>
		<property name="maxPasswordLength" value="12"/>
		<property name="maxUnsuccessfulLoginsCount" value="5"/>
		<property name="resetPasswordLifetime" value="24"/>
	</bean>
	
	<bean id="taskScheduler"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
	</bean>
	
	<import resource="../quartz/quartz-context.xml" />
	
	<!-- Ehcache library setup -->
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:properties/ehcache.xml" p:shared="true" />
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache" />
	<bean id="annotationCacheOperationSource" class="org.springframework.cache.annotation.AnnotationCacheOperationSource"/>
	<bean id="cacheInterceptor" class="org.springframework.cache.interceptor.CacheInterceptor">
		<property name="cacheManager" ref="cacheManager"/>
		<property name="cacheOperationSources" ref="annotationCacheOperationSource"/>
	</bean>

	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames"
			value="physiotherapieServiceImpl,psychotherapyServiceImpl,treatmentTypeServiceImpl,unitServiceImpl" />
		<property name="interceptorNames" value="cacheInterceptor" />
	</bean>

<!-- 
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	<bean class="org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor">
		<property name="cacheOperationSources" ref="annotationCacheOperationSource"/>
	</bean>
 -->	
</beans>
